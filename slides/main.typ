#import "@preview/touying:0.6.1": *
#import themes.metropolis: *

#let uni_logos = {
  let kik_text(t) = text(t, fill: white, size: 8pt, font: "Microsoft Sans Serif")
  place(top + right, dy: -55pt, dx: -100pt, image("misis_logo_inv.png", width: 10%))
  place(top + right, dy: -49pt, dx: -51pt, image("kik_logo.png", width: 3.7%))
  place(top + right, dy: -49pt, dx: -13.2pt, kik_text("Кафедра"))
  place(top + right, dy: -38pt, dx: -1.7pt, kik_text("инженерной"))
  place(top + right, dy: -27pt, kik_text("кибернетики"))
}

#show: metropolis-theme.with(
  aspect-ratio: "16-9",
  config-info(
    title: ["Нейросетевая модель наблюдателя для оценки качества медицинских томографических изображений"],
    subtitle: [\ Выпускная квалификационная работа],
    author: [
      Выполнил: Джумагельдиев С.А. \
      Руководитель: доцент, к.т.н. Полевой Д.В.

      Академическая группа БПМ-21-2 \
      Бакалавриат по направлению 01.03.04 Прикладная математика \
      Кафедра инженерной кибернетики
    ],
    institution: [
      #place(dy: 20pt, image("kik_logo.png", width: 5%))
      #place(dy: 17pt, dx: 50pt, image("misis_logo.png", width: 12%))
    ],
  ),
  config-colors(secondary: rgb("#0c3458"), neutral-lightest: rgb("#fff")),
)

#set text(lang: "ru", size: 18pt)
#set heading(numbering: none)
#set math.mat(delim: "[")

#title-slide()

=  <touying:hidden>

== Актуальность

#uni_logos

- Качество изображения -- показатель того, насколько успешно некоторый наблюдатель извлекает из него информацию.

- Оценка качества изображений (Image Quality Assessment) необходима при разработке томографов (их аппаратного и программного обеспечения).

- IQA с использованием наблюдателей-экспертов требует больших временных (и организационных) затрат.

- Модели наблюдателей (Model Observers) позволяют частично или полностью автоматизировать этот процесс.

- Классические MO накладывают ограничения на входные снимки.

#speaker-note[
  + Для улучшения томографов и их ПО, нужно знать качество изображений, которые они производят.

  + В радиологии под качеством подразумевают способность некоторого наблюдателя извлекать из снимка интересующую информацию, например факт наличия или отсутствия слабо различимого объекта.

  + Классические модели наблюдателей, разработанные для автоматизации оценки качества, накладывают множество ограничений на входные данные.
]

== Содержательная постановка задачи

#uni_logos

*Цель*: разработка нейросетевой модели наблюдателя-человека для оценки качества компьютерных томограмм, полученных при различных конфигурациях системы, производящей эти изображения.

*Задачи*:

+ разработать ПО для генерации исходных данных и их ручной разметки;

+ сгенерировать обучающие и тестовые данные – произвести томограммы и вручную их разметить;

+ разработать модель наблюдателя с помощью методов глубокого машинного обучения, а также реализовать альтернативные, существующие модели;

+ произвести сравнительную оценку моделей.

*Предметная область*: оценка качества изображений в компьютерной томографии с использованием моделей наблюдателей. Объектами исследования являются различные методы моделирования наблюдателей, а предметом – сравнение функциональных характеристик моделей с наблюдателем-человеком.

#speaker-note[
  + Цель работы - разработать нейросетевую модель наблюдателя-человека для оценки качества томограмм.

  + Для этого необходимо разработать ПО для генерации подходящих томографических данных и произвести датасет.

  + Далее, разработать и обучить основную модель, а также реализовать несколько альтернативных.

  + После -- провести сравнительную оценку полученных моделей.
]

== Исходные данные

#let cfg_table = table(
  columns: (0.3fr, 0.5fr, 0.7fr, 1fr),
  align: center,
  table.header(
    [№],
    [Сила\ тока, мА],
    [Средний радиус, мм],
    [Ядро реконструкции],
  ),

  [1], [10], [4], [standard],
  [2], [40], [4], [standard],
  [3], [10], [5], [standard],
  [4], [40], [5], [standard],
  [5], [10], [4], [soft],
  [6], [40], [4], [soft],
  [7], [10], [5], [soft],
  [8], [40], [5], [soft],
  [9\*], [40], [4], [standard],
  [10\*], [10], [5], [standard],
)

#let tom_grid = grid(
  columns: 2, rows: 2, inset: 4pt,
  grid.cell(image("tom_sp.png")),
  grid.cell(image("tom_sp_roi.png")),
  grid.cell(image("tom_sa.png")),
  grid.cell(image("tom_sa_roi.png"))
)

#uni_logos

#grid(
  columns: (4fr, 3.3fr),
  grid.cell(figure(tom_grid, caption: [Демонстрационные томограммы и области интереса на них])),
  grid.cell(figure(cfg_table, caption: [Параметры генерации данных]))
)

#speaker-note[
  + Данные здесь -- это полученные с помощью физической симуляции томограммы грудной клетки человека.

  + Были сгенерированы изображения для 520 областей интереса с сигналом и столько же без для каждой из 10 конфигураций.

  + Конфигурации отличаются в основном силой тока в рентгеновской трубке, размером объектов-сигналов и ядром реконструкции конечных изображений.

  + Первые четыре конфигурации выделены для обучения моделей, остальные -- для проверки.
]

== Математическая постановка задачи

#uni_logos

$G={G_k}_(k=1)^K$, где $G_k={(g_i, y_i)}_(i=1)^n_k$ -- множество пар изображение-метка для конфигурации $k$:

- $g_i=mat(
    l_(1,1), ..., l_(1,w);
    dots.v, dots.down, dots.v;
    l_(h,1), ..., l_(h,w),
  )$, где $l_(y x) in RR$ -- радиоденсивность пикселя в HU (Hounsfield Unit);

- $y_i in {0, 1}$ -- метка наблюдателя-человека о наличии объекта-сигнала на изображении.

\

$G_k = P_k union N_k$, где $P_k = P_k^alpha union P_k^beta$ и $N_k = N_k^alpha union N_k^beta$:

- $P_k$ ($N_k$) -- подмножество, где сигнал _действительно_ присутствует (отсутствует);

- $alpha$ ($beta$) -- индикатор подмножества обучающей (тестовой) выборки.

\

Дополнительные множества:

- $G^alpha=union.big_k (G_k^alpha)$, где $G_k^alpha = union.big_k (P_k^alpha union N_k^alpha)$;

- $G^beta=union.big_k (G_k^beta)$, где $G_k^beta = union.big_k (P_k^beta union N_k^beta)$.

#speaker-note[
  + Данные для каждой конфигурации k можно представить как множества пар изображение-метка.

  + Метка y равна единице, если согласно наблюдателю-человеку на области интереса присутствует сигнал.

  + Данные также разделены на подмножества по факту действительного присутствия или отсутствия сигнала, а также принадлежности к обучающей или тестовой выборке.
]

== Математическая постановка задачи

#uni_logos

Функция потерь классификатора -- бинарная кросс-энтропия:

$H_zeta (theta, G^alpha) = -1 / (abs(G^alpha))
display(sum_((g, y) in G^alpha))[y log(p_zeta (g;theta)) + (1-y) log(1-p_zeta (g;theta))]
-->_(theta in RR^d) min$,
- $zeta, theta$ -- гиперпараметры и параметры модели, а $d$ -- количество параметров.

\

#let auc_formulas = {
  $"AUC"_k (theta, G_k^beta) = 1 / (abs(P_k^beta) abs(N_k^beta))
  sum_((g_0, y_0) in N_k^beta) sum_((g_1, y_1) in P_k^beta)
  psi(p_zeta (g_0;theta), p_zeta (g_1;theta)),$

  linebreak()
  linebreak()

  $"AUC"_k^Ч (G_k^beta) = 1 / (abs(P_k^beta) abs(N_k^beta))
  sum_((g_0, y_0) in N_k^beta) sum_((g_1, y_1) in P_k^beta)
  psi(y_0, y_1),$
}

Модельные и эталонные оценки качества изображений конфигурации:

#grid(
  columns: 2, inset: (0pt, 15pt, 0pt, 0pt),
  grid.cell(auc_formulas),
  grid.cell($psi(a, b) = cases(
    1", "a < b,
    0", "a > b,
    0.5", "a=b,
  ).$)
)

\

Показатель адекватности модели -- линейный коэффициент корреляции:

$r(theta^*, G^beta) = (sum_k ("AUC"_k - overline("AUC"_k))("AUC"_k^Ч - overline("AUC"_k^Ч))) / sqrt(sum_k ("AUC"_k - overline("AUC"_k))^2 sum_k ("AUC"_k^Ч - overline("AUC"_k^Ч))^2)
-->_zeta max, "  где" theta^* = display(arg min_(theta in RR^d)) (H_zeta (theta, G^alpha))$.

#speaker-note[
  + Цель нейросети здесь -  предсказание меток. Так как она двоичная, при обучении необходимо минимизировать среднюю бинарную кросс-энтропию.

  + Далее из модельных и эталонных оценок качества вычисляется показатель адекватности модели -- линейный коэффициент корреляции. 

  + Цель можно сформулировать как максимизацию корреляции на тестовой выборке с помощью модели, минимизирующей функцию потерь на тренировочной.
]

== Свёрточная нейронная сеть

#uni_logos

#figure(image("cnnmo_arch.png", width: 107%), caption: [Архитектура CNN-MO])

#grid(
  columns: 2, inset: 15pt, align: center, column-gutter: 40pt,
  grid.cell([$i$-я свёртка свёрточного слоя (Conv):]),
  grid.cell([$C_i = b_i J + display(sum_c) K_(c,i) * g_c$]),
  grid.hline(),
  grid.cell([Линейный слой (Gemm):]),
  grid.cell([$P(bold(x)) = W bold(x) + bold(b)$]),
  grid.hline(),
  grid.cell([Слой подвыборки (MaxPool):]),
  grid.cell([$M_c [y][x] = \
    = max{g_c [y r + m][x r + l] | l,m=0..(r-1)}$]),
  grid.hline(),
  grid.cell([Функции активации (Relu и Elu):]),
  grid.cell([$f_"ReLU" (x) = max{0, x},
    "   " f_"ELU" (x) = cases(x", "x > 0, gamma (e^x - 1)", "x <= 0)$]),
)

#speaker-note[
  + В качестве базовой архитектуры для основной модели была выбрана свёрточная нейронная сеть с добавлением короткой связи для увеличения производительности.

  + В отличие от классических моделей наблюдателей, эта позволяет оценить качество почти любого набора изображений.
]

== Наблюдатель Хотеллинга с каналами

#uni_logos

#grid(
  columns: (5fr, 1fr),
  grid.cell([
    *CHO* (наблюдатель Хотеллинга с каналами): $t(bold(g)) = ( ((K_N + K_P) / 2)^(-1) Delta overline(bold(nu)))^top bold(nu) + delta$,

    *CHOss* (_CHO single sample_): $t(bold(g)) = (bold(nu) - overline(bold(nu)_N))^top K_N^(-1) (bold(nu) - overline(bold(nu)_N)) + delta$:

    - $bold(nu) = [bold(u)_1^top bold(g) + epsilon_1, bold(u)_2^top bold(g) + epsilon_2,...,bold(u)_L^top bold(g) + epsilon_L]^top$ -- вектор откликов для $L$ каналов:
      - $bold(g)$ и $bold(u)_l$ -- векторные построчные записи изображения и канала соответственно,
      - $epsilon_l$ -- нормально распределённый внутренний шум, как и $delta$;
    - $K_N$ ($K_P$) -- ковариационная матрица $bold(nu)$ для изображений множества $N_k$ ($P_k$);
    - $Delta overline(bold(nu)) = overline(bold(nu)_P) - overline(bold(nu)_N)$ -- разница между средними откликами классов;

    \

    Фильтр Габора для генерации каналов:

    $G(x, y) = e^(-(4 ln(2)) / w^2 (x^2 + y^2)) cos(2 pi f_c (x cos(theta) + y sin(theta)) + phi)$,
    - $f_c$ и $w$ -- центральная частота и ширина канала;
    - $theta$ и $phi$ -- угол ориентации канала и фазовый сдвиг (равен нулю).
  ]),
  grid.cell(
    figure(
      image("cho_channels.png", width: 60%),
      caption: [Набор каналов Габора],
    ),
  )
)

#speaker-note[
  + В качестве альтернативных моделей выбрана самая распространённая -- наблюдатель Хотеллинга с каналами, а также её недавняя модификация -- CHO single sample.

  + Модели линейны, но при генерации их шаблонов используются фильтры Габора, моделирующие процессы, протекающие в зрительной коре мозга.

  + Для обучения И использования этих моделей требуется очень большое количество однотипных изображений, по нескольким причинам.
]

== Разработка ПО

#uni_logos

#grid(
  columns: (3fr, 1fr), gutter: 0pt,
  grid.cell(figure(image("flowchart.png"), caption: [Блок-схема процесса оценки качества])),
  grid.cell(
    figure(
      grid(
        columns: 1,
        rows: 4,
        gutter: 20pt,
        grid.cell(image("xcist_logo.jpg", width: 70%)),
        grid.cell(image("numpy_logo.png", width: 70%)),
        grid.cell(image("pytorch_logo.png", width: 70%)),
        grid.cell(image("python_logo.png", width: 70%))
      ),
      caption: [Использованные в разработке средства],
    ),
  )
)

#speaker-note[
  + На данном слайде представлена блок-схема процесса оценки качества изображений, а также перечислены средства, использованные при разработке.

  + XCIST здесь -- это Python-библиотека для физической симуляции компьютерного томографа.
]

== Результаты

#uni_logos

#let res_table = {
  set text(size: 14pt)

  table(
    columns: 3,
    align: center,
    fill: (x, _) => if calc.odd(x) { luma(240) } else { white },
    table.header(
      [Модель],
      [$r$ на тестовой выборке (5-10) $arrow.b$],
      [$r$ на всём датасете (1-10)],
    ),

    [*CNN-MO*], [*0.931*], [*0.904*],
    [CHOss], [0.912], [0.808],
    [CHO (r)], [0.857], [0.844],
    [CHO], [0.158], [0.408],
    [CHOss (r)], [-0.298], [-0.067],
  )
}

#grid(
  columns: (3.5fr, 1fr), gutter: 5pt, inset: 0pt,
  grid.cell(figure(image("result_graphs.png"), caption: [Отклонения оценок и средняя производительность наблюдателей])),
  grid.cell(figure(res_table, caption: [Коэффициенты корреляции]))
)

#speaker-note[
  + Результаты. Слева на слайде представлены графики отклонения модельных оценок от оценок наблюдателя-человека, посередине - диаграмма средней производительности наблюдателей, а справа -- вычисленные коэффициенты корреляции.

  + Можно заметить, что основная модель незначительно опережает CHO single sample, однако для обучения первой потребовалось от 2.5 до 5 раз меньше данных, чем для остальных.

  + Модель CHO же имеет критически низкую среднюю производительность на имеющихся данных, из-за чего её использовать не стоит, не смотря на высокую корреляцию.
]

== Выводы

#uni_logos

В рамках работы выполнено следующее:

+ проведён аналитический обзор литературы;

+ сформулированы содержательная и математическая постановки;

+ разработано программное обеспечение для создания относительно реалистичных томографических данных, подходящих для проверки различных MO;

+ создан набор данных с 10400 записей, 20% из которых были размечены вручную;

+ обучена основанная на свёрточной нейронной сети модель наблюдателя-человека и проверена с помощью методов математической статистики;

+ проведено сравнение полученной модели с реализованными в рамках этой работы альтернативными MO. В результате сравнения CNN-MO показала большую адекватность при значительно меньшем количестве требуемых для обучения данных;

+ часть результатов работы была опубликована в сборнике тезисов "80-е Дни науки Университета МИСИС".

#speaker-note[
  + Все поставленные задачи были выполнены.

  + Было разработано ПО для генерации более реалистичных томографических данных, чем принято в данной области.

  + Также был создан датасет значительного размера, пятая часть из которых была размечена вручную, хоть и не очень хорошо.

  + И наконец, была разработана относительно оригинальная модель наблюдателя, которая оказалась адекватнее и экономичнее самостоятельно реализованных альтернатив.

  + Дополнительно, часть результатов опубликована в сборнике тезисов "80-е Дни науки университета МИСИС".
]

